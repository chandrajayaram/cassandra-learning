package killrvideo.validation;

import static org.apache.commons.lang3.StringUtils.isBlank;

import javax.inject.Inject;
import javax.validation.Validator;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import killrvideo.entity.User;
import killrvideo.entity.UserCredentials;

/**
 * Manually validate inputs from Grpc clients
 *
 * The best practices require using Java Bean Validation (JSR-303)
 * but since the request objects are generated by Grpc, we cannot add
 * annotations on them, thus requiring manual and tedious validation.
 * See : https://groups.google.com/forum/#!topic/grpc-io/Q7fyXSA4jmM
 *
 */
@Service
public class KillrVideoInputValidator {

    private static final Logger LOGGER = LoggerFactory.getLogger(KillrVideoInputValidator.class);

    @Inject
    Validator validator;



    public boolean isValid(User request) {
        final StringBuilder errorMessage = initErrorString(request);
        boolean isValid = true;

        if (request.getUserId() == null || isBlank(request.getUserId())) {
            errorMessage.append("\t\tuser id should be provided for create user request\n");
            isValid = false;
        }

        if (isBlank(request.getPassword())) {
            errorMessage.append("\t\tpassword should be provided for create user request\n");
            isValid = false;
        }

        if (isBlank(request.getEmail())) {
            errorMessage.append("\t\temail should be provided for create user request\n");
            isValid = false;
        }
        return isValid;
    }

    public boolean isValid(UserCredentials request) {
        final StringBuilder errorMessage = initErrorString(request);
        boolean isValid = true;

        if (isBlank(request.getEmail())) {
            errorMessage.append("\t\temail should be provided for verify credentials request\n");
            isValid = false;
        }

        if (isBlank(request.getPassword())) {
            errorMessage.append("\t\tpassword should be provided for verify credentials request\n");
            isValid = false;
        }

        return isValid;
    }

    private StringBuilder initErrorString(Object request) {
        return new StringBuilder("Validation error for '" + request.toString() + "' : \n");
    }


}
